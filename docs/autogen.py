# -*- coding: utf-8 -*-
import pathlib
import shutil
import keras_autodoc

PAGES = {        
    'documentation/gpopt.md': [
        'GPopt.GPOpt.GPOpt.GPOpt',
        'GPopt.GPOpt.GPOpt.GPOpt.optimize',                
        'GPopt.GPOpt.GPOpt.GPOpt.load',
        'GPopt.GPOpt.GPOpt.GPOpt.close_shelve'
    ]
}

GPopt_dir = pathlib.Path(__file__).resolve().parents[1]


def generate(dest_dir):
    template_dir = GPopt_dir / 'docs' / 'templates'

    doc_generator = keras_autodoc.DocumentationGenerator(
        pages = PAGES,
        # project_url = 'https://github.com/Techtonique/GPopt',
        template_dir = template_dir,
        #GPopt_dir / 'examples'
    )
    doc_generator.generate(dest_dir)

    readme = (GPopt_dir / 'README.md').read_text()
    index = (template_dir / 'index.md').read_text()
    index = index.replace('{{autogenerated}}', readme[readme.find('##'):])
    (dest_dir / 'index.md').write_text(index, encoding='utf-8')
    shutil.copyfile(GPopt_dir / 'CONTRIBUTING.md',
                    dest_dir / 'contributing.md')
    #shutil.copyfile(GPopt_dir / 'docs' / 'extra.css',
    #                dest_dir / 'extra.css')


if __name__ == '__main__':
    generate(GPopt_dir / 'docs' / 'sources')